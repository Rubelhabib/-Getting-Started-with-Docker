# MySQL Bind Mount Demo with Docker

This project demonstrates how to run a MySQL container using Docker with a bind mount to persist data.


🐳 What It Does

- Runs a MySQL Docker container  
- Mounts a local `mysql-data/` directory to persist database data  
- Allows you to delete and recreate the container without losing data


📁 Project Structure

```
mysql-bindmount-demo/
├── mysql-data/             # Local data directory (bind-mounted)
├── start-mysql.sh          # Shell script to run MySQL container
```


▶️ How to Run

```bash
# 1. Make sure Docker is installed and running

# 2. Make the script executable
chmod +x start-mysql.sh

# 3. Run the script
./start-mysql.sh

# 4. Check container status
docker ps

# 5. Enter the container
docker exec -it mysql-container1 bash

# 6. Login to MySQL
mysql -u root -p
# Password: mypassword
```

💾 Test Data Persistence

```bash
# Inside MySQL, create a test database
CREATE DATABASE test_bindmount;

# Exit MySQL and container
exit
exit

# Remove the container
docker rm -f mysql-container1

# Re-run the script
./start-mysql.sh

# Re-enter and check database
docker exec -it mysql-container1 bash
mysql -u root -p
SHOW DATABASES;  # You should see 'test_bindmount' still there!
```

📌 Notes

- The bind mount ensures that MySQL data is stored locally in `mysql-data/`
- You can explore and backup data directly from that folder if needed

---

✅ Perfect for beginners learning Docker + data persistence
